services:
  di-postgres:
    image: postgres
    container_name: di-postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: didb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - di
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d didb"]
      interval: 10s
      timeout: 5s
      retries: 5

  di-kafka:
    image: apache/kafka:latest
    container_name: di-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@di-kafka:9093 # Should be the same as service name
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - di
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  di-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: di-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    networks:
      - di
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\\|status.*yellow'"]
      interval: 20s
      timeout: 10s
      retries: 3

  di-redis:
    image: redis:7
    container_name: di-redis
    ports:
      - "6379:6379"
    networks:
      - di
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  di-backend:
    container_name: di-backend
    image: amitking2309/document-ingestion
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://di-postgres:5432/didb
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
      - SPRING_ELASTICSEARCH_URIS=http://di-elasticsearch:9200
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=di-kafka:9092
      - SPRING_REDIS_HOST=di-redis
      - SPRING_REDIS_PORT=6379
      - FILE_UPLOAD_DIR=/app/uploads
      - JWT_SECRET=your-secret-key
      - JWT_EXPIRATION=86400000
    volumes:
      - document-uploads:/app/uploads
    networks:
      - di
    depends_on:
      di-postgres:
        condition: service_healthy
      di-kafka:
        condition: service_healthy
      di-elasticsearch:
        condition: service_healthy
      di-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  di-frontend:
    container_name: di-frontend
    build:
      context: ../di-frontend
      dockerfile: Dockerfile
    image: amitking2309/document-ingestion-ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://di-backend:8080
      - NODE_ENV=production
    networks:
      - di
    depends_on:
      di-backend:
        condition: service_healthy

volumes:
  pgdata:
  esdata:
  document-uploads:

networks:
  di:
    driver: "bridge"
